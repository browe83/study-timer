{"version":3,"sources":["mixkit-alarm-digital-clock-beep-989.wav","components/Timer.js","hooks/useInterval.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","container","display","flexDirection","justifyContent","alignItems","height","backgroundColor","timer","width","paddingTop","breakpoints","down","length","subLength","arrows","Timer","useState","sessionLength","setSessionLength","breakLength","setBreakLength","inSession","setInSession","mode","setMode","time","setTime","classes","beep","useRef","callback","delay","savedCallback","useEffect","current","id","setInterval","clearInterval","useInterval","play","duration","Container","className","Paper","elevation","outlined","Typography","variant","Box","IconButton","onClick","align","Duration","fromMillis","toFormat","pause","currentTime","src","sound","ref","default","kind","createMuiTheme","palette","type","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9099eb1b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mixkit-alarm-digital-clock-beep-989.1d012d48.wav\";","import {\n  Container,\n  Paper,\n  Typography,\n  Box,\n  IconButton,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport { useState, useEffect, useRef } from 'react';\nimport { Duration } from 'luxon';\nimport useInterval from '../hooks/useInterval';\nimport sound from '../mixkit-alarm-digital-clock-beep-989.wav';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    backgroundColor: '#d4eee2',\n  },\n  timer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '60%',\n    paddingTop: '10px',\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n    },\n  },\n  length: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    width: '400px',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  subLength: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  arrows: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nexport default function Timer() {\n  const [sessionLength, setSessionLength] = useState(25);\n  const [breakLength, setBreakLength] = useState(5);\n  const [inSession, setInSession] = useState(false);\n  const [mode, setMode] = useState('session');\n  const [time, setTime] = useState(sessionLength * 60 * 1000);\n\n  const classes = useStyles();\n  const beep = useRef();\n\n  useInterval(() => setTime(time - 1000), inSession ? 1000 : null);\n\n  const timeLeft = (duration) =>\n    Duration.fromMillis(duration).toFormat('mm:ss');\n\n  useEffect(() => {\n    if (time === 0 && mode === 'session') {\n      beep.current.play();\n      setMode('break');\n      setTime(breakLength * 60 * 1000);\n    } else if (time === 0 && mode === 'break') {\n      beep.current.play();\n      setMode('session');\n      setTime(sessionLength * 60 * 1000);\n    }\n  }, [time, breakLength, sessionLength, mode]);\n\n  const handleReset = () => {\n    beep.current.pause();\n    beep.current.currentTime = 0;\n    setInSession(false);\n    setMode('session');\n    setBreakLength(5);\n    setSessionLength(25);\n    setTime(25 * 60 * 1000);\n  };\n\n  const incrementSession = () => {\n    // eslint-disable-next-line no-unused-expressions\n    sessionLength > 58\n      ? setSessionLength(60)\n      : setSessionLength(sessionLength + 1);\n  };\n\n  const decrementSession = () => {\n    // eslint-disable-next-line no-unused-expressions\n    sessionLength === 1\n      ? setSessionLength(1)\n      : setSessionLength(sessionLength - 1);\n  };\n\n  useEffect(() => {\n    setTime(sessionLength * 60 * 1000);\n  }, [sessionLength]);\n\n  const decrementBreak = () => {\n    // eslint-disable-next-line no-unused-expressions\n    breakLength === 1 ? setBreakLength(1) : setBreakLength(breakLength - 1);\n  };\n\n  const incrementBreak = () => {\n    // eslint-disable-next-line no-unused-expressions\n    breakLength > 58 ? setBreakLength(60) : setBreakLength(breakLength + 1);\n  };\n\n  return (\n    <Container className={classes.container}>\n      <Paper elevation={12} outlined className={classes.timer}>\n        <Typography variant=\"h4\" outlined>\n          25 + 5 Clock\n        </Typography>\n        <Box className={classes.length}>\n          <Box className={classes.subLength}>\n            <Typography id=\"break-label\" variant=\"h5\">\n              Break Length\n            </Typography>\n            <Box className={classes.arrows}>\n              <IconButton id=\"break-decrement\" onClick={decrementBreak}>\n                <ArrowDownwardIcon />\n              </IconButton>\n              <Typography id=\"break-length\">{breakLength}</Typography>\n              <IconButton id=\"break-increment\" onClick={incrementBreak}>\n                <ArrowUpwardIcon />\n              </IconButton>\n            </Box>\n          </Box>\n          <Box className={classes.subLength}>\n            <Typography id=\"session-label\" variant=\"h5\">\n              Session Length\n            </Typography>\n            <Box className={classes.arrows}>\n              <IconButton id=\"session-decrement\" onClick={decrementSession}>\n                <ArrowDownwardIcon />\n              </IconButton>\n              <Typography id=\"session-length\">{sessionLength}</Typography>\n              <IconButton id=\"session-increment\" onClick={incrementSession}>\n                <ArrowUpwardIcon />\n              </IconButton>\n            </Box>\n          </Box>\n        </Box>\n        <Box>\n          <Container>\n            <Typography id=\"timer-label\" align=\"center\" variant=\"h5\">\n              {mode === 'session' ? 'Session' : 'Break'}\n            </Typography>\n            <Typography id=\"time-left\" align=\"center\" variant=\"h3\">\n              {timeLeft(time)}\n            </Typography>\n          </Container>\n        </Box>\n        <Container align=\"center\">\n          <IconButton id=\"start_stop\" onClick={() => setInSession(!inSession)}>\n            <PlayCircleOutlineIcon />\n            <PauseCircleOutlineIcon />\n          </IconButton>\n          <IconButton id=\"reset\" onClick={handleReset}>\n            <AutorenewIcon />\n          </IconButton>\n        </Container>\n      </Paper>\n      <audio id=\"beep\" src={sound} ref={beep}>\n        <track default kind=\"captions\" />\n      </audio>\n    </Container>\n  );\n}\n","// I didn't write this custom hook. I found it here: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from 'react';\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nexport default theme;\n","import './App.css';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Timer from './components/Timer';\nimport theme from './theme';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Timer />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}